- content_for :primary_nav do
  = render :partial => 'retail/shared/navbar'

#content.wide
  .box
    %h1 Place New Purchase Order
    %p Please confirm the following products to place your new puchase order.

    - form_for @order, :url => retail_customer_orders_path(current_customer), :html => { :class => :form } do |f|

      = f.error_messages
      - f.fields_for :items, @order.items do |order_item|
        = order_item.hidden_field :packaging_option_id
        = order_item.hidden_field :product_id
        = order_item.hidden_field :quantity
        = order_item.hidden_field :price

      .box
        %table.t1
          %thead
            %tr
              %th.w40 Title
              %th Packaging
              %th.w15 Qty.
              %th Price
          %tfoot
            %th Total
            %th
            %th
            %th= number_to_currency(current_customer.cart.items_total_price)
          %tbody
            - for item in current_customer.cart.items
              %tr{:class => cycle("odd", "even")}
                %td= link_to item.product.title, retail_catalog_product_path(item.catalog, item.product)
                %td= item.packaging_option.title
                %td= item.quantity
                %td= number_to_currency(item.price*item.quantity + item.packaging_option.price)

        - if current_customer.anonymous
          .box
            %h3
              User information
              = link_to 'I already have an account', customer_sign_in_path(:checkout => true), :class => 'all'
            %label
              %span
                First Name
              %input{:type => 'text', :name => 'user[first_name]', :value => current_customer.first_name}

            %label
              %span
                Last Name
              %input{:type => 'text', :name => 'user[last_name]', :value => current_customer.last_name}

            %label
              %span
                E-mail
              %input{:type => 'text', :name => 'user[email]', :value => current_customer.email}

            %label
              %span
                Password
              %input{:type => 'password', :name => 'user[password]', :size => '6'}

            %label
              %span
                Password confirmation
              %input{:type => 'password', :name => 'user[password_confirmation]', :size => '6'}


        .box
          %h3 Credit Card
          %label{:for => 'card_type'}
            %span Card Type
            = f.select :card_type, [['Visa','visa'], ['MasterCard','mastercard'], ['Discover','discover'], ['American Express', 'american_express']]
          %label{:for => 'card_number'}
            %span Card Number
            = f.text_field :card_number
          %label{:for => 'card_verification'}
            %span Card Verification
            = f.text_field :card_verification, :size => '6'
          %label{:for => 'card_expires_on'}
            %span Card Expires On
            = f.date_select :card_expires_on, :discard_day => true, :start_year => Date.today.year, :add_month_numbers => true

          %p.clear

          %h3 Billing Address
          %label{:for => 'billing_address1'}
            %span Address 1
            = f.text_field :billing_address1, :value => current_customer.address1
          %label{:for => 'billing_address2'}
            %span Address 2
            = f.text_field :billing_address2, :value => current_customer.address2
          %label{:for => 'billing_city'}
            %span City
            = f.text_field :billing_city, :value => current_customer.city
          %label{:for => 'billing_state'}
            %span State (US only)
            = f.select :billing_state, us_state_options_for_select(current_customer.state, :include_blank => true)
          %label{:for => 'billing_zip_code'}
            %span Zip Code
            = f.text_field :billing_zip_code, :value => current_customer.zip_code, :size => '6'
          %label{:for => 'billing_country'}
            %span Country
            = f.select :billing_country, country_options_for_select(current_customer.country)

          %p.clear

          %h3 Shipping Address
          = check_box_tag :same_as, '1', false
          Same as Billing Address
          
          #shipping
            %label{:for => 'shipping_name'}
              %span Ship to
              = f.text_field :shipping_name, :value => current_customer.full_name
            %label{:for => 'shipping_address1'}
              %span Address 1
              = f.text_field :shipping_address1, :value => current_customer.address1
            %label{:for => 'shipping_address2'}
              %span Address 2
              = f.text_field :shipping_address2, :value => current_customer.address2
            %label{:for => 'shipping_city'}
              %span City
              = f.text_field :shipping_city, :value => current_customer.city
            %label{:for => 'shipping_state'}
              %span State (US only)
              = f.select :shipping_state, us_state_options_for_select(current_customer.state, :include_blank => true)
            %label{:for => 'shipping_zip_code'}
              %span Zip Code
              = f.text_field :shipping_zip_code, :value => current_customer.zip_code, :size => '6'
            %label{:for => 'shipping_country'}
              %span Country
              = f.select :shipping_country, country_options_for_select(current_customer.country)

          -# hidden fields for helper attr_accessor methods
          = f.hidden_field :first_name, :value => current_customer.first_name
          = f.hidden_field :last_name,  :value => current_customer.last_name
          = f.hidden_field :ip_address, :value => request.remote_ip

          %p.clear

          %h3 Shipping Options available
          %p= f.select :shipping_option_id, options_from_collection_for_select(ShippingOption.all, :id, :title_with_price)

        .box
          %p.btso
            %button.b1{:type => 'submit'}
              Place Order
            or
            = link_to 'Cancel', retail_customer_cart_path(current_customer)

= observe_field :same_as, :frequency => 0.25, :function => visual_effect(:toggle_appear, "shipping", :duration => 1)
